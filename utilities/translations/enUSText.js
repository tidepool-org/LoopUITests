const OnboardingScreen = {
  Cancel: 'Cancel',
};
const HomeScreen = {
  HUD: {

    AddCGM: 'Add CGM',
    BGTapToAdd: 'Tap to Add',
    BGNoRecent: 'No Recent Glucose',
    CGMError: 'CGM Error',
    ClosedLoopOn: 'Closed Loop ON',
    Dismiss: 'Dismiss',
    LoopIcon: 'LoopUI.LoopCompletionHUDView',
    LoopWaitingForFirstRun: 'Waiting for first run',
    CGMPill: 'CGM Status',
    CGMSignalLoss: 'Signal Loss',
    CGMGenericAlert: 'Alert: FG Title',
    PodReservoirIcon: 'pod_reservoir',
    PumpCommsIssue: 'Comms Issue',
    PumpNoInsulin: 'No Insulin',
    PumpError: 'Pump Error',
    PumpOcclusion: 'Pump Occlusion',
    PumpPill: 'Pump Status',
  },
  AddCGMMenu: {
    DexcomG6: 'Dexcom G6',
    CGMSimulator: 'CGM Simulator',
  },
  AddPumpMenu: {
    PumpSimulator: 'Insulin Pump Simulator',
  },
  DebugMenu: {
    MockTherapySettings: 'Mock Therapy Settings',
  },
  GlucoseChart: 'Glucose',
  ActiveInsulinChart: 'Active Insulin',
  InsulinDeliveryChart: 'Insulin Delivery',
  ActiveCarbohydrates: 'Active Carbohydrates',
  ButtonBar: {
    AddMeal: 'Add Meal',
    Bolus: 'Bolus',
    PreMealTargets: 'Pre-Meal Targets',
    Settings: 'Settings',
    WorkoutTargets: 'Workout Targets',
  },
};
const PredictedGlucoseScreen = {
  Header: 'Predicted Glucose',
  Carbohydrates: 'Carbohydrates',
  Insulin: 'Insulin',
  GlucoseMomentum: 'Glucose Momentum',
  RetrospectiveCorrection: 'Retrospective Correction',
};
const ActiveInsulinScreen = {
  Header: 'Insulin Delivery',
  IOB: 'U IOB',
  Total: 'U Total',
  EventHistory: 'Event History',
  Reservoir: 'Reservoir',
};
const InsulinDeliveryScreen = {
  Header: 'Insulin Delivery',
  IOB: 'U IOB',
  Total: 'U Total',
  EventHistory: 'Event History',
  Reservoir: 'Reservoir',
};
const ActiveCarbohydratesScreen = {
  ActiveCarbohydrates: 'Active Carbohydrates',
  Header: 'Carbohydrates',
  GlucoseChange: 'Glucose Change',
  Predicted: 'Predicted',
  Observed: 'Observed',
  GramsActiveCarbs: 'g Active Carbs',
  GramsTotalCarbs: 'g Total',
};
const CGMSimulatorScreen = {
  AddCGMButton: 'Add CGM\nTap here to set up a CGM',
  BackfillGlucose: 'Backfill Glucose',
  BackToCGMSettings: 'CGM Settings',
  ConstantModel: 'Constant',
  DismissAlert: 'Dismiss',
  Done: 'Done',
  ImmediateAlertDismiss: 'FG OK',
  ImmediateAlertStatus: 'Alert: FG Title',
  IssueAlerts: 'Issue Alerts',
  IssueAnImmediateAlert: 'Issue an immediate alert',
  MeasurementFrequency: 'Measurement Frequency',
  RetractAlert: 'Retract any alert above',
  Save: 'Save',
  Seconds: '5 seconds',
  SignalLoss: 'Signal Loss',
};
const PumpSimulatorScreen = {
  AcceptAlert: 'OK',
  Done: 'Done',
  ErrorOnSuspend: 'Error on Suspend',
  InsulinSuspendedStatus: 'Insulin Suspended',
  InsulinSuspendedStatusBanner: 'Tap to Resume',
  SuspendButton: 'Suspend Delivery',
};
const General = {
  NewEntry: 'New Entry',
  Cancel: 'Cancel',
  Continue: 'Continue',
  Done: 'Done',
  Save: 'Save',
  Back: 'Back',
  Add: 'Add',
  Edit: 'Edit',
  Status: 'Status',
  Dismiss: 'Dismiss',
  OK: 'OK',
  GlucoseUnitLabel: 'mg/dL',
  InsulinUnitLabel: 'U',
  InsulinUnitPerHourLabel: 'U/hr',
  CarbohydratesUnitLabel: 'g',
  ButtonLabel: {
    Plus: 'plus',
    InfoCircle: 'info.circle',
  },
  Alert: {
    ExclamationMark: 'exclamationmark.triangle.fill',
    MissingCarbEffects: 'Missing Data: Carb Effects',
    MissingInsulinEffects: 'Missing Data: Insulin Effects',
    ConfigurationError: 'Configuration Error: Check Settings',
    MissingGlucoseData: 'Missing Data: Glucose Data Not Available',
    BolusError: 'Bolus\nCommunication Failure',
  },
  TimeSlot: [
    '12:00 AM',
    '12:30 AM',
    '1:00 AM',
    '1:30 AM',
    '2:00 AM',
    '2:30 AM',
    '3:00 AM',
    '3:30 AM',
    '4:00 AM',
    '4:30 AM',
    '5:00 AM',
    '5:30 AM',
    '6:00 AM',
    '6:30 AM',
    '7:00 AM',
    '7:30 AM',
    '8:00 AM',
    '8:30 AM',
    '9:00 AM',
    '9:30 AM',
    '10:00 AM',
    '10:30 AM',
    '11:00 AM',
    '11:30 AM',
    '12:00 PM',
    '12:30 PM',
    '1:00 PM',
    '1:30 PM',
    '2:00 PM',
    '2:30 PM',
    '3:00 PM',
    '3:30 PM',
    '4:00 PM',
    '4:30 PM',
    '5:00 PM',
    '5:30 PM',
    '6:00 PM',
    '6:30 PM',
    '7:00 PM',
    '7:30 PM',
    '8:00 PM',
    '8:30 PM',
    '9:00 PM',
    '9:30 PM',
    '10:00 PM',
    '10:30 PM',
    '11:00 PM',
    '11:30 PM',
  ],
};

const CarbEntryScreen = {
  Header: 'Add Carb Entry',
  AddMeal: 'Add Meal',
  SaveWithoutBolusing: 'Save without Bolusing',
  AmountConsumed: 'Amount Consumed',
  Time: 'Time',
  FoodType: 'Food Type',
  AbsorptionTime: 'Absorption Time',
  AbsorptionMessage:
    'Choose a longer absorption time for larger meals, or those containing fats and proteins. This is only guidance to the algorithm and need not be exact.',
  MealBolusScreen: {
    Header: 'Meal Bolus',
    CarbEntry: 'Carb Entry',
    Unit: General.InsulinUnitLabel,
    RecommendedBolus: 'Recommended Bolus',
    BolusSummary: 'Bolus Summary',
    Bolus: 'Bolus',
    ActiveCarbs: 'Active Carbs',
    SaveAndDeliver: 'Save and Deliver',
    Glucose: 'Glucose',
    SaveWithoutBolusing: 'Save without Bolusing',
  },
};

const simpleBolusCalculatorScreen = {
  Header: 'Simple Bolus Calculator',
  Info: 'When out of Closed Loop mode, the app uses a simplified bolus calculator like a typical pump.',
  RecommendedBolus: 'Recommended Bolus',
  Bolus: 'Bolus',
  EnterBolus: 'Enter Bolus',
  CurrentGlucose: 'Current Glucose',
  Deliver: 'Deliver',
  Carbohydrates: 'Carbohydrates',
};

const simpleMealBolusCalculatorScreen = {
  Header: 'Simple Meal Calculator',
  Info: simpleBolusCalculatorScreen.Info,
  RecommendedBolus: simpleBolusCalculatorScreen.RecommendedBolus,
  Bolus: simpleBolusCalculatorScreen.Bolus,
  EnterBolus: simpleBolusCalculatorScreen.EnterBolus,
  CurrentGlucose: simpleBolusCalculatorScreen.CurrentGlucose,
  Deliver: simpleBolusCalculatorScreen.Deliver,
  Carbohydrates: 'Carbohydrates',
};

const BolusScreen = {
  MainScreen: {
    Header: 'Bolus',
    Unit: General.InsulinUnitLabel,
    RecommendedBolus: 'Recommended Bolus',
    BolusSummary: 'Bolus Summary',
    ActiveCarbs: 'Active Carbs',
    Deliver: 'Deliver',
    EnterBolus: 'Enter Bolus',
    Glucose: 'Glucose',
  },
  SimpleBolusCalculatorScreen: simpleMealBolusCalculatorScreen,
  SimpleMealBolusCalculatorScreen: simpleMealBolusCalculatorScreen,
};

const CustomPresetScreen = {
  WorkoutTargets: 'Workout Targets',
  Header: 'Custom Preset',
  Info: "Tap '+' to create a new preset",
  Presets: 'Presets',
};

const LoopSettingsScreen = {
  ClosedLoop: 'Closed Loop',
  Support: 'Support',
  Done: 'Done',
};

module.exports = {
  General,
  OnboardingScreen,
  BolusScreen,
  CarbEntryScreen,
  LoopSettingsScreen,
  CustomPresetScreen,
  HomeScreen,
  PredictedGlucoseScreen,
  ActiveInsulinScreen,
  InsulinDeliveryScreen,
  ActiveCarbohydratesScreen,
  CGMSimulatorScreen,
  PumpSimulatorScreen,
};
